###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
Importance_genes_asthma <- RandomLasso(Norm_Asthma_TRT, Norm_Asthma_CON,
Importance_TRT = Importance_TRT_asthma1, Importance_CON = Importance_CON_asthma1,
NumOfFeatures = q1, repeat_Boostrapping = B, PVAL = 0.05, STEP2 = FALSE)
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
Importance_genes_asthma <- RandomLasso(Norm_Asthma_TRT, Norm_Asthma_CON,
Importance_TRT = Importance_TRT_asthma1, Importance_CON = Importance_CON_asthma1,
NumOfFeatures = q1, repeat_Boostrapping = B, PVAL = 0.05, STEP2 = FALSE)
###############################################################################
###############################################################################
###############################################################################
###############################################################################
library(readxl)
library(igraph)
library(ggraph)
library(ggnetwork)
library(lars)         # for 'lasso model'
library(pROC)
expData <- read_excel("bin/AsthmaDNAe.xlsx", col_names = TRUE)
setwd("~/KSULasso/R")
source("src/RandomGraph.R")
source("src/RandomLasso.R")
expData <- read_excel("bin/AsthmaDNAe.xlsx", col_names = TRUE)
head(expData)
expData <- data.frame(na.omit(expData))
head(expData)
expData[, 1]
gene_tech <- as.character(as.vector(expData[, 1]))
gene_tech
gene_names <- as.character(as.vector(expData[, 2]))
gene_names
expGene_Asthma <- expData[, -1]
expGene_Asthma
expGene_Asthma <- expGene_Asthma[, -1]
expGene_Asthma
expGene_Asthma
#######  read in data < Asthma > : Gene exp data
## Using randomLasso for feature selection and t-test fo differential of two group
## gene names are 'NA' then delete and include '|' , then we also delete
setwd("~/KSULasso/R")
source("src/RandomGraph.R")
source("src/RandomLasso.R")   # with pvalue
#install.packages("readxl")
library(readxl)
library(igraph)
library(ggraph)
library(ggnetwork)
library(lars)         # for 'lasso model'
library(pROC)       # for 'ROC curve'
library(gplots)       # for heatmap
library(RColorBrewer) # for heatmap
##=========================================================================================================
# read asthma data
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
#, sheet=1, verbose=FALSE, perl="c:/Research/R/asthma/perl.exe", header = TRUE)
# sum(is.na(expData[, 2]))   # 41764
# sum(!is.na(expData[, 2]))  # 3269
expData <- data.frame(na.omit(expData)) #
gene_names <- as.character(as.vector(expData[, 1]))
gene_names  <- as.character(as.vector(expData[, 2]))
expGene_Asthma <- expData[, -1]
expGene_Asthma <- expGene_Asthma[, -1]
dim(expGene_Asthma)  # 3269 * 194
tmpGene <- t(as.matrix(as.character(gene_names)))
n_r <- length(tmpGene)
n_r
tmpGene
dim(tmpGene)
geneList <- list()
for (i in 1: n_r)
{
geneList[[i]] <- unlist(strsplit(tmpGene[i], "\\|"))
}
#geneList
length(geneList)  # separate gene names from '|' because one row includes several gene names seperateing '|'
tmp1 <- matrix(FALSE, nrow = n_r, ncol = 1 )
tmp_names <- matrix(FALSE, nrow = n_r, ncol = 1 )
for (i in 1: n_r)
{
tmp1[i] <- length(geneList[[i]]) == 1
}
dim(tmp1)
expGene_Asthma <- t(expGene_Asthma[tmp1, ])
gene_names <- gene_names[tmp1]
colnames(expGene_Asthma) <- gene_names
dim(expGene_Asthma)  # 194 3139
# change '-' to '_' in genename
gene_names  <- colnames(expGene_Asthma)
gene_names <- chartr(".", "_", gene_names)  # "." character change the "_"
gene_names <- chartr("-", "_", gene_names)  # "-" character change the "_"
length(gene_names) # 3139
# remove same gene names
length(gene_names) # 3139
length(unique(gene_names)) # 3016
unique_gene <- unique(colnames(expGene_Asthma))
length(unique_gene)   # 3016
nc_gene <- length(unique_gene)
nr_gene <- nrow(expGene_Asthma)
AsthmaData <- matrix(0, nrow = nr_gene, ncol = nc_gene)
dim(AsthmaData)
colnames(AsthmaData) <- unique_gene
rownames(AsthmaData) <- rownames(expGene_Asthma)
for (i in 1:nc_gene)
{
same_gene <- which(!is.na(match(gene_names, unique_gene[i])))
if (length(same_gene) == 1)
{
AsthmaData[, i] <- expGene_Asthma[, same_gene]
} else if (length(same_gene) > 1)
{
AsthmaData[, i] <- apply(expGene_Asthma[, same_gene], 1, max)
}
}
dim(AsthmaData)  # 194 by 3016
##=========================================================================================================
## Feature selection using t-test with threshold p < .05
Group <- as.matrix(substr(rownames(AsthmaData), 1, 3))
expGene_AST <- AsthmaData[(Group == "AST"), ]   # 97 by 3016
expGene_CON <- AsthmaData[(Group == "CON"), ]   # 97 by 3016
nc <- ncol(AsthmaData)
Pval_Of_ttest <- matrix(0, ncol = nc)
names(Pval_Of_ttest) <- colnames(AsthmaData)
for (i in 1 : nc)
{
tmp <- t.test(expGene_AST[, i], expGene_CON[, i])
Pval_Of_ttest[i] <- tmp$p.value
}
id_gene <- which(Pval_Of_ttest < .05)  #  214 genes, column number
# final feature selection data set
Asthma_gene <- AsthmaData[, id_gene]    # final data for analysis
dim(Asthma_gene)   # 194 by 214
# save raw data including rownames(patients names)
row_names <- rownames(Asthma_gene)
Asthma_gene1 <- cbind(row_names, Asthma_gene)   ## after saving rownames , and write csv file
write.csv(Asthma_gene1, "bin/AsthmaGenes.csv", row.names=FALSE)
##=========================================================================================================
## Fitting GRN two groups using Asthma : Method is randomlasso with p value 0.05
## normalization
Norm_Asthma <- scale(Asthma_gene)  # normalization
Group <- as.matrix(substr(rownames(Norm_Asthma), 1, 3))
Norm_Asthma_TRT <- Norm_Asthma[(Group == "AST"), ]
Norm_Asthma_CON <- Norm_Asthma[(Group == "CON"), ]
dim(Norm_Asthma_TRT)  # 97 by 214
#
# # or normalization seperately groups
# Group <- as.matrix(substr(rownames(Asthma_gene), 1, 3))
# Norm_Asthma_TRT <- Asthma_gene[(Group == "AST"), ]
# Norm_Asthma_CON <- Asthma_gene[(Group == "CON"), ]
# Norm_Asthma_TRT <- scale(Norm_Asthma_TRT)
# Norm_Asthma_CON <- scale(Norm_Asthma_CON)
# dim(Norm_Asthma_TRT)  # 97 by 214
set.seed(34567)
## random lasso
# Determin Feature size, Bootstraping size
size <- Determin_Feature_size(Data = Norm_Asthma_TRT, C_I = 0.95, P = 0.5, S_E = 0.05, REP = 20)
q1 <- size[[1]]  # feature size for step1 in RandomLASSO
q2 <- size[[2]]  # feature size for step2 in RandomLASSO
B <- size[[3]]   # repeated numer of bootstraping
# randomLASSO step1
numGenes <- ncol(Norm_Asthma)    # number of genes
Importance_TRT_asthma1 <- matrix(0, nrow = numGenes, ncol = numGenes)
Importance_CON_asthma1 <- matrix(0, nrow = numGenes, ncol = numGenes)
Importance_genes_asthma <- RandomLasso(Norm_Asthma_TRT, Norm_Asthma_CON,
Importance_TRT = Importance_TRT_asthma1, Importance_CON = Importance_CON_asthma1,
NumOfFeatures = q1, repeat_Boostrapping = B, PVAL = 0.05, STEP2 = FALSE)
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
expData <- data.frame(na.omit(expData))
gene_names <- as.character(as.vector(expData[, 2]))
gene_names
expGene_Asthma <- expData[, -c(1, 2)]
expGene_Asthma
dim(expGene_Asthma)
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
expData <- data.frame(na.omit(expData))
gene_names <- as.character(as.vector(expData[, 2]))
expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData)))]
dim(expGene_Asthma)
expGene_Asthma
expGene_Asthma
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
expData <- data.frame(na.omit(expData))
gene_names <- as.character(as.vector(expData[, 2]))
expData[ , !is.na(as.numeric(as.character(expData)))]
expData[ ,!is.na(as.numeric(as.character(expData[1, ])))]
expGene_Asthma
gene_names
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
expData <- data.frame(na.omit(expData))
gene_names <- as.character(as.vector(expData[, 2]))
expGene_Asthma2 <- expData[ ,-c(1,2)]
expGene_Asthma2
expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData)))]
expGene_Asthma
expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData[1, ])))]
expGene_Asthma
# Loads xlsx data into memory. -Matthew
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
# Removes entire row if any NA data is present. -Matthew
expData <- data.frame(na.omit(expData))
# Name of the genes are located in column one and two. -Matthew
gene_names <- as.character(as.vector(expData[, 2]))
# Removing columns one and two. -Matthew
expGene_Asthma <- expData[ ,-c(1,2)]
dim(expGene_Asthma)
tmpGene <- t(as.matrix(as.character(gene_names)))
n_r <- length(tmpGene)
n_r
tmpGene
dim(tmpGene)
t(as.matrix(as.character(gene_names)))
geneList <- list()
for (i in 1: n_r) {
geneList[[i]] <- unlist(strsplit(tmpGene[i], "\\|"))
}
geneList
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
# Removes entire row if any NA data is present. -Matthew
expData <- data.frame(na.omit(expData))
# Name of the genes are located in column one and two. -Matthew
gene_names <- as.character(as.vector(expData[, 2]))
# Removing columns one and two. -Matthew
expGene_Asthma <- expData[ ,-c(1,2)]
# Alt code that removes all columns with non-numeric values. -Matthew
# expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData[1, ])))]
# Printing the dimensions of the data -Matthew
dim(expGene_Asthma)
# Converting gene names to numeric. -Matthew
tmpGene <- t(as.matrix(as.character(gene_names)))
n_r <- length(tmpGene)
dim(tmpGene)
# List of gene names attached to gene numbers. -Matthew
geneList <- list()
for (i in 1: n_r) {
geneList[[i]] <- unlist(strsplit(tmpGene[i], "\\|"))
}
length(geneList)
tmp1 <- matrix(FALSE, nrow = n_r, ncol = 1 )
tmp_names <- matrix(FALSE, nrow = n_r, ncol = 1 )
for (i in 1: n_r)
{
tmp1[i] <- length(geneList[[i]]) == 1
}
dim(tmp1)
expGene_Asthma <- t(expGene_Asthma[tmp1, ])
gene_names <- gene_names[tmp1]
colnames(expGene_Asthma) <- gene_names
dim(expGene_Asthma)
gene_names  <- colnames(expGene_Asthma)
# Changing "." to "_" -Matthew
gene_names <- chartr(".", "_", gene_names)
# Changing "-" to "_" -Matthew
gene_names <- chartr("-", "_", gene_names)
length(gene_names) # 3139
# Checking for repeat gene names -Matthew
length(gene_names) # 3139
length(unique(gene_names)) # 3016
unique_gene <- unique(colnames(expGene_Asthma))
length(unique_gene)   # 3016
nc_gene <- length(unique_gene)
nr_gene <- nrow(expGene_Asthma)
AsthmaData <- matrix(0, nrow = nr_gene, ncol = nc_gene)
dim(AsthmaData)
colnames(AsthmaData) <- unique_gene
rownames(AsthmaData) <- rownames(expGene_Asthma)
for (i in 1:nc_gene)
{
same_gene <- which(!is.na(match(gene_names, unique_gene[i])))
if (length(same_gene) == 1) {
AsthmaData[, i] <- expGene_Asthma[, same_gene]
} else if (length(same_gene) > 1) {
AsthmaData[, i] <- apply(expGene_Asthma[, same_gene], 1, max)
}
}
dim(AsthmaData) # 194 by 3016
##=========================================================================================================
## Feature selection using t-test with threshold p < .05
Group <- as.matrix(substr(rownames(AsthmaData), 1, 3))
expGene_AST <- AsthmaData[(Group == "AST"), ]   # 97 by 3016
expGene_CON <- AsthmaData[(Group == "CON"), ]   # 97 by 3016
nc <- ncol(AsthmaData)
Pval_Of_ttest <- matrix(0, ncol = nc)
names(Pval_Of_ttest) <- colnames(AsthmaData)
for (i in 1 : nc)
{
tmp <- t.test(expGene_AST[, i], expGene_CON[, i])
Pval_Of_ttest[i] <- tmp$p.value
}
id_gene <- which(Pval_Of_ttest < .05)  #  214 genes, column number
# final feature selection data set
Asthma_gene <- AsthmaData[, id_gene]    # final data for analysis
dim(Asthma_gene)   # 194 by 214
# save raw data including rownames(patients names)
row_names <- rownames(Asthma_gene)
Asthma_gene1 <- cbind(row_names, Asthma_gene)
write.csv(Asthma_gene1, "bin/AsthmaGenes.csv", row.names=FALSE)
Asthma_gene1
Asthma_gene
head(Asthma_gene)
AsthmaData[Group, ]
AsthmaData[(Group == "AST"), ]
AsthmaData[(Group == "A"), ]
AsthmaData[(Group == "CON"), ]
AsthmaData[(Gr == "CON"), ]
as.matrix(substr(rownames(AsthmaData), 1, 3))
Pval_Of_ttest
Pval_Of_ttest < .05
tmp
which(Pval_Of_ttest < .05)
Pval_Of_ttest < .05
Pval_Of_ttest <- matrix(0, ncol = nc)
Pval_Of_ttest
names(Pval_Of_ttest)
names(Pval_Of_ttest) <- colnames(AsthmaData)
Pval_Of_ttest
nc]
nc
nc
dim(Asthma_gene)
dim(Asthma_gene1)
Asthma_gene[1,]
Asthma_gene1[1,]
length(Asthma_gene1[1,])
length(Asthma_gene[1,])
rownames(Asthma_gene)
Norm_Asthma <- scale(Asthma_gene)
Norm_Asthma
# Adding row names as a row. -Matthew
write.csv(cbind(rownames(Asthma_gene), Asthma_gene),
"bin/AsthmaGenes.csv", row.names = FALSE)
help(read_exce)
help(read_excel)
setwd("~/KSULasso/R")
source("src/RandomGraph.R")
source("src/RandomLasso.R")
library(readxl)
library(igraph)
library(ggraph)
library(ggnetwork)
library(lars)
library(pROC)
library(gplots)
library(RColorBrewer)
# Loads xlsx data into memory. -Matthew
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
# Removes entire row if any NA data is present. -Matthew
expData <- data.frame(na.omit(expData))
# Name of the genes are located in column one and two. -Matthew
gene_names <- as.character(as.vector(expData[, 2]))
# Removing columns one and two. -Matthew
expGene_Asthma <- expData[ ,-c(1,2)]
# Alt code that removes all columns with non-numeric values. -Matthew
# expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData[1, ])))]
# Printing the dimensions of the data -Matthew
dim(expGene_Asthma)
# Converting gene names to numeric. -Matthew
tmpGene <- t(as.matrix(as.character(gene_names)))
n_r <- length(tmpGene)
dim(tmpGene)
setwd("~/KSULasso/R")
source("src/RandomGraph.R")
source("src/RandomLasso.R")
setwd("~/KSULasso/R")
source("src/RandomGraph.R")
source("src/RandomLasso.R")
library(readxl)
library(igraph)
library(ggraph)
library(ggnetwork)
library(lars)
library(pROC)
library(gplots)
library(RColorBrewer)
# Loads xlsx data into memory. -Matthew
expData <- read_excel("bin/AsthmaDNA.xlsx", col_names = TRUE)
# Removes entire row if any NA data is present. -Matthew
expData <- data.frame(na.omit(expData))
# Name of the genes are located in column one and two. -Matthew
gene_names <- as.character(as.vector(expData[, 2]))
# Removing columns one and two. -Matthew
expGene_Asthma <- expData[ ,-c(1,2)]
# Alt code that removes all columns with non-numeric values. -Matthew
# expGene_Asthma <- expData[ , !is.na(as.numeric(as.character(expData[1, ])))]
# Printing the dimensions of the data -Matthew
dim(expGene_Asthma)
# Converting gene names to numeric. -Matthew
tmpGene <- t(as.matrix(as.character(gene_names)))
n_r <- length(tmpGene)
dim(tmpGene)
# Attching gene names to gene numbers as a list. -Matthew
geneList <- list()
for (i in 1: n_r) {
geneList[[i]] <- unlist(strsplit(tmpGene[i], "\\|"))
}
length(geneList)
tmp1 <- matrix(FALSE, nrow = n_r, ncol = 1 )
tmp_names <- matrix(FALSE, nrow = n_r, ncol = 1 )
for (i in 1: n_r) {
tmp1[i] <- length(geneList[[i]]) == 1
}
dim(tmp1)
expGene_Asthma <- t(expGene_Asthma[tmp1, ])
gene_names <- gene_names[tmp1]
colnames(expGene_Asthma) <- gene_names
dim(expGene_Asthma)
gene_names  <- colnames(expGene_Asthma)
# Changing "." to "_" in gene names. -Matthew
gene_names <- chartr(".", "_", gene_names)
# Changing "-" to "_" in gene names. -Matthew
gene_names <- chartr("-", "_", gene_names)
length(gene_names) # 3139
# Checking for repeat gene names -Matthew
length(gene_names) # 3139
length(unique(gene_names)) # 3016
unique_gene <- unique(colnames(expGene_Asthma))
length(unique_gene)   # 3016
nc_gene <- length(unique_gene)
nr_gene <- nrow(expGene_Asthma)
AsthmaData <- matrix(0, nrow = nr_gene, ncol = nc_gene)
dim(AsthmaData)
colnames(AsthmaData) <- unique_gene
rownames(AsthmaData) <- rownames(expGene_Asthma)
for (i in 1:nc_gene) {
same_gene <- which(!is.na(match(gene_names, unique_gene[i])))
if (length(same_gene) == 1) {
AsthmaData[, i] <- expGene_Asthma[, same_gene]
} else if (length(same_gene) > 1) {
AsthmaData[, i] <- apply(expGene_Asthma[, same_gene], 1, max)
}
}
dim(AsthmaData) # 194 by 3016
# The first three letters of the row names. -Matthew
Group <- as.matrix(substr(rownames(AsthmaData), 1, 3))
# Dividing the data into two groups. -Matthew
# AST are those with Asthma, AST == Asthma. -Matthew
expGene_AST <- AsthmaData[(Group == "AST"), ] # 97 by 3016
# CON are those without Asthma, CON == Control. -Matthew
expGene_CON <- AsthmaData[(Group == "CON"), ] # 97 by 3016
# Number of columns. -Matthew
nc <- ncol(AsthmaData) # 3016
# Creating matrix for Pvalues. -Matthew
Pval_Of_ttest <- matrix(0, ncol = nc)
# Assigning gene names to matrix for Pvalues. -Matthew
names(Pval_Of_ttest) <- colnames(AsthmaData)
# Running T-test between AST and CON for every column. -Matthew
for (ii in 1:nc) {
tmp <- t.test(expGene_AST[, ii], expGene_CON[, ii])
Pval_Of_ttest[ii] <- tmp$p.value
}
# Only P-values greater than 0.05 are kept. -Matthew
id_gene <- which(Pval_Of_ttest < 0.05)
Asthma_gene <- AsthmaData[, id_gene]
# Adding row names as a row. -Matthew
write.csv(cbind(rownames(Asthma_gene), Asthma_gene),
"bin/AsthmaGenes.csv", row.names = FALSE)
# Normalization. -Matthew
Norm_Asthma <- scale(Asthma_gene)
# The first three letters of the row names. -Matthew
Group <- as.matrix(substr(rownames(Norm_Asthma), 1, 3))
# Dividing the data into two groups. -Matthew
# AST are those with Asthma, AST == Asthma. -Matthew
Norm_Asthma_TRT <- Norm_Asthma[(Group == "AST"), ]
# CON are those without Asthma, CON == Control. -Matthew
Norm_Asthma_CON <- Norm_Asthma[(Group == "CON"), ]
dim(Norm_Asthma_TRT)  # 97 by 214
# Alt Normalization seperately by groups. -Matthew
# Group <- as.matrix(substr(rownames(Asthma_gene), 1, 3))
# Norm_Asthma_TRT <- Asthma_gene[(Group == "AST"), ]
# Norm_Asthma_CON <- Asthma_gene[(Group == "CON"), ]
# Norm_Asthma_TRT <- scale(Norm_Asthma_TRT)
# Norm_Asthma_CON <- scale(Norm_Asthma_CON)
# dim(Norm_Asthma_TRT)  # 97 by 214
# Seed for random number generation. -Matthew
set.seed(34567)
# See RandomLasso.R for function. -Matthew
size <- Determin_Feature_size(Data = Norm_Asthma_TRT, C_I = 0.95, P = 0.5, S_E = 0.05, REP = 20)
q1 <- size[[1]]
q2 <- size[[2]]
B <- size[[3]]
git config --global core.editor "vim"
size
numGenes <- ncol(Norm_Asthma)
Importance_TRT_asthma1 <- matrix(0, nrow = numGenes, ncol = numGenes)
Importance_CON_asthma1 <- matrix(0, nrow = numGenes, ncol = numGenes)
# Check paper on Random Lasso page 472 for on Step 1. -Matthew
# http://dept.stat.lsa.umich.edu/~jizhu/pubs/Wang-AOAS11.pdf
Importance_genes_asthma <- RandomLasso(Norm_Asthma_TRT, Norm_Asthma_CON,
Importance_TRT = Importance_TRT_asthma1,
Importance_CON = Importance_CON_asthma1,
NumOfFeatures = q1, repeat_Boostrapping = B,
PVAL = 0.05, STEP2 = FALSE)
